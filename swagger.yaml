openapi: 3.0.3

info:
  title: Ooblets API
  description: |-
    An **UNOFFICIAL** [Ooblets](https://ooblets.com) API.

    # Attribution

    The information used was based on the content of the
    [Ooblets Wiki](https://ooblets.fandom.com/wiki/Ooblets_Wiki) which is licensed
    under [CC BY-NC-SA 3.0](https://creativecommons.org/licenses/by-sa/3.0).
  contact:
    email: staticsanches@gmail.com
  license:
    name: MIT
    url: https://github.com/staticsanches/ooblets_api/blob/main/LICENSE
  version: 0.0.1

externalDocs:
  description: Visit the Github Repository
  url: https://github.com/staticsanches/ooblets_api

servers:
  - url: https://staticsanches.github.io/ooblets_api/api/v1

tags:
  - name: ooblets
  - name: items
  - name: locations
  - name: moves
  - name: general

paths:
  /ooblets/all.json:
    get:
      tags:
        - ooblets
      summary: List all Ooblets in JSON
      description: >-
        Returns a list with the ids of all available Ooblets in JSON format
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/OobletList"
  /ooblets/all.yaml:
    get:
      tags:
        - ooblets
      summary: List all Ooblets in YAML
      description: >-
        Returns a list with the ids of all available Ooblets in YAML format
      responses:
        "200":
          description: Successful operation
          content:
            text/x-yaml:
              schema:
                $ref: "#/components/schemas/OobletList"
  /ooblets/{id}/data.json:
    get:
      tags:
        - ooblets
      summary: Find Ooblet data by ID in JSON
      description: Returns a single Ooblet in JSON format
      parameters:
        - name: id
          in: path
          description: ID of the Ooblet to return
          required: true
          schema:
            $ref: "#/components/schemas/OobletID"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Ooblet"
  /ooblets/{id}/data.yaml:
    get:
      tags:
        - ooblets
      summary: Find Ooblet data by ID in YAML
      description: Returns a single Ooblet in YAML format
      parameters:
        - name: id
          in: path
          description: ID of the Ooblet to return
          required: true
          schema:
            $ref: "#/components/schemas/OobletID"
      responses:
        "200":
          description: Successful operation
          content:
            text/x-yaml:
              schema:
                $ref: "#/components/schemas/Ooblet"
  /ooblets/{id}/common.png:
    get:
      tags:
        - ooblets
      summary: Find Ooblet common image by ID
      description: Returns a single Ooblet common PNG image
      parameters:
        - name: id
          in: path
          description: ID of the Ooblet to return
          required: true
          schema:
            $ref: "#/components/schemas/OobletID"
      responses:
        "200":
          description: Successful operation
          content:
            image/png:
              schema:
                type: string
                format: binary
  /ooblets/{id}/gleamy.png:
    get:
      tags:
        - ooblets
      summary: Find Ooblet gleamy image by ID
      description: Returns a gleamy Ooblet gleamy PNG image
      parameters:
        - name: id
          in: path
          description: ID of the Ooblet to return
          required: true
          schema:
            $ref: "#/components/schemas/OobletID"
      responses:
        "200":
          description: Successful operation
          content:
            image/png:
              schema:
                type: string
                format: binary
  /ooblets/{id}/unusual.png:
    get:
      tags:
        - ooblets
      summary: Find Ooblet unusual image by ID
      description: Returns an unusual Ooblet unusual PNG image
      parameters:
        - name: id
          in: path
          description: ID of the Ooblet to return
          required: true
          schema:
            $ref: "#/components/schemas/OobletID"
      responses:
        "200":
          description: Successful operation
          content:
            image/png:
              schema:
                type: string
                format: binary

  /items/all.json:
    get:
      tags:
        - items
      summary: List all Items in JSON
      description: >-
        Returns a list with the ids of all available Items in JSON format
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ItemList"
  /items/all.yaml:
    get:
      tags:
        - items
      summary: List all Items in YAML
      description: >-
        Returns a list with the ids of all available Items in YAML format
      responses:
        "200":
          description: Successful operation
          content:
            text/x-yaml:
              schema:
                $ref: "#/components/schemas/ItemList"
  /items/{id}/data.json:
    get:
      tags:
        - items
      summary: Find Item data by ID in JSON
      description: Returns a single Item in JSON format
      parameters:
        - name: id
          in: path
          description: ID of the Item to return
          required: true
          schema:
            $ref: "#/components/schemas/ItemID"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Item"
  /items/{id}/data.yaml:
    get:
      tags:
        - items
      summary: Find Item data by ID in YAML
      description: Returns a single Item in YAML format
      parameters:
        - name: id
          in: path
          description: ID of the Item to return
          required: true
          schema:
            $ref: "#/components/schemas/ItemID"
      responses:
        "200":
          description: Successful operation
          content:
            text/x-yaml:
              schema:
                $ref: "#/components/schemas/Item"
  /items/{id}/image.png:
    get:
      tags:
        - items
      summary: Find Item image by ID
      description: Returns an Item PNG image
      parameters:
        - name: id
          in: path
          description: ID of the Item to return
          required: true
          schema:
            $ref: "#/components/schemas/ItemID"
      responses:
        "200":
          description: Successful operation
          content:
            image/png:
              schema:
                type: string
                format: binary

  /locations/all.json:
    get:
      tags:
        - locations
      summary: List all Locations in JSON
      description: >-
        Returns a list with the ids of all available Locations in JSON format
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LocationList"
  /locations/all.yaml:
    get:
      tags:
        - locations
      summary: List all Locations in YAML
      description: >-
        Returns a list with the ids of all available Locations in YAML format
      responses:
        "200":
          description: Successful operation
          content:
            text/x-yaml:
              schema:
                $ref: "#/components/schemas/LocationList"
  /locations/{id}/data.json:
    get:
      tags:
        - locations
      summary: Find Location data by ID in JSON
      description: Returns a single Location in JSON format
      parameters:
        - name: id
          in: path
          description: ID of the Location to return
          required: true
          schema:
            $ref: "#/components/schemas/LocationID"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Location"
  /locations/{id}/data.yaml:
    get:
      tags:
        - locations
      summary: Find Location data by ID in YAML
      description: Returns a single Location in YAML format
      parameters:
        - name: id
          in: path
          description: ID of the Location to return
          required: true
          schema:
            $ref: "#/components/schemas/LocationID"
      responses:
        "200":
          description: Successful operation
          content:
            text/x-yaml:
              schema:
                $ref: "#/components/schemas/Location"
  /locations/{id}/image.png:
    get:
      tags:
        - locations
      summary: Find Location image by ID
      description: Returns a Location PNG image
      parameters:
        - name: id
          in: path
          description: ID of the Location to return
          required: true
          schema:
            $ref: "#/components/schemas/LocationID"
      responses:
        "200":
          description: Successful operation
          content:
            image/png:
              schema:
                type: string
                format: binary

  /moves/all.json:
    get:
      tags:
        - moves
      summary: List all Moves in JSON
      description: >-
        Returns a list with the ids of all available Moves in JSON format
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/MoveList"
  /moves/all.yaml:
    get:
      tags:
        - moves
      summary: List all Moves in YAML
      description: >-
        Returns a list with the ids of all available Moves in YAML format
      responses:
        "200":
          description: Successful operation
          content:
            text/x-yaml:
              schema:
                $ref: "#/components/schemas/MoveList"
  /moves/{id}/data.json:
    get:
      tags:
        - moves
      summary: Find Move data by ID in JSON
      description: Returns a single Move in JSON format
      parameters:
        - name: id
          in: path
          description: ID of the Move to return
          required: true
          schema:
            $ref: "#/components/schemas/MoveID"
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Move"
  /moves/{id}/data.yaml:
    get:
      tags:
        - moves
      summary: Find Move data by ID in YAML
      description: Returns a single Move in YAML format
      parameters:
        - name: id
          in: path
          description: ID of the Move to return
          required: true
          schema:
            $ref: "#/components/schemas/MoveID"
      responses:
        "200":
          description: Successful operation
          content:
            text/x-yaml:
              schema:
                $ref: "#/components/schemas/Move"
  /moves/{id}/image.png:
    get:
      tags:
        - moves
      summary: Find Move image by ID
      description: Returns a Move PNG image
      parameters:
        - name: id
          in: path
          description: ID of the Move to return
          required: true
          schema:
            $ref: "#/components/schemas/MoveID"
      responses:
        "200":
          description: Successful operation
          content:
            image/png:
              schema:
                type: string
                format: binary

  /timestamp_version.json:
    get:
      tags:
        - general
      summary: Get the Timestamp Version of the API in JSON
      description: >-
        Returns the number of seconds since epoch that the last version of
        the API was modified in JSON format
      responses:
        "200":
          description: Successful operation
          content:
            application/json:
              schema:
                type: integer
  /timestamp_version.yaml:
    get:
      tags:
        - general
      summary: Get the Timestamp Version of the API in YAML
      description: >-
        Returns the number of seconds since epoch that the last version of
        the API was modified in YAML format
      responses:
        "200":
          description: Successful operation
          content:
            text/x-yaml:
              schema:
                type: integer

components:
  schemas:
    Ooblet:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/OobletID"
        name:
          $ref: "#/components/schemas/I18nString"
        quote:
          $ref: "#/components/schemas/I18nString"
        items:
          type: array
          items:
            $ref: "#/components/schemas/ItemWithQuantity"
        signatureMoves:
          type: array
          items:
            $ref: "#/components/schemas/MoveWithLevel"
      required:
        - id
        - name
        - quote
        - items
        - signatureMoves
      additionalProperties: false
    OobletID:
      type: string
      enum:
        - angkze
        - bibbin
        - bittle
        - bristlebud
        - bunglebee
        - chickadingding
        - clickyclaws
        - clomper
        - derble
        - dooziedug
        - dumbirb
        - firmo
        - fleeble
        - fripp
        - glanter
        - gloopy_long_legs
        - gopslop
        - grebun
        - gubwee
        - gullysplot
        - gumple
        - hermble
        - isopud
        - jama
        - kingwa
        - legsy
        - lickzer
        - lumpstump
        - marshling
        - moogy
        - namnam
        - nuppo
        - oogum
        - pantsabear
        - petula
        - plob
        - quabbo
        - radlad
        - rockstack
        - shrumbo
        - sidekey
        - skuffalo
        - snurfler
        - spuddle
        - tamlin
        - tud
        - unnyhunny
        - whirlitzer
        - wigglewip
        - wuddlin
    OobletList:
      type: array
      items:
        $ref: "#/components/schemas/OobletID"

    Item:
      oneOf:
        - $ref: "#/components/schemas/CookedFoodItem"
        - $ref: "#/components/schemas/ForageableItem"
        - $ref: "#/components/schemas/IngredientItem"
        - $ref: "#/components/schemas/RawCropItem"
      properties:
        name:
          $ref: "#/components/schemas/I18nString"
        description:
          $ref: "#/components/schemas/I18nString"
      required:
        - name
        - description
      additionalProperties: false
    CookedFoodItem:
      properties:
        id:
          $ref: "#/components/schemas/CookedFoodItemID"
        type:
          type: string
          enum:
            - "cooked_food"
        recipe:
          type: array
          items:
            $ref: "#/components/schemas/ItemWithQuantity"
      required:
        - id
        - type
        - recipe
      additionalProperties: false
    ForageableItem:
      properties:
        id:
          $ref: "#/components/schemas/ForageableItemID"
        type:
          type: string
          enum:
            - "forageable"
        location:
          $ref: "#/components/schemas/LocationID"
      required:
        - id
        - type
        - location
      additionalProperties: false
    IngredientItem:
      properties:
        id:
          $ref: "#/components/schemas/IngredientItemID"
        type:
          type: string
          enum:
            - "ingredient"
        recipe:
          type: array
          items:
            $ref: "#/components/schemas/ItemWithQuantity"
      required:
        - id
        - type
        - recipe
      additionalProperties: false
    RawCropItem:
      properties:
        id:
          $ref: "#/components/schemas/RawCropItemID"
        type:
          type: string
          enum:
            - "raw_crop"
        location:
          $ref: "#/components/schemas/LocationID"
      required:
        - id
        - type
        - location
      additionalProperties: false
    ItemID:
      type: string
      enum:
        - bread_sammy
        - buttonboy
        - froobtose
        - muz
        - muz_flour
        - rainplop
        - soggy_bread
        - sweetiebeetie
      oneOf:
        - $ref: "#/components/schemas/CookedFoodItemID"
        - $ref: "#/components/schemas/ForageableItemID"
        - $ref: "#/components/schemas/IngredientItemID"
        - $ref: "#/components/schemas/RawCropItemID"
    CookedFoodItemID:
      type: string
      enum:
        - bread_sammy
        - soggy_bread
    ForageableItemID:
      type: string
      enum:
        - buttonboy
        - rainplop
    IngredientItemID:
      type: string
      enum:
        - froobtose
        - muz_flour
    RawCropItemID:
      type: string
      enum:
        - muz
        - sweetiebeetie
    ItemWithQuantity:
      type: object
      properties:
        item:
          $ref: "#/components/schemas/ItemID"
        quantity:
          type: integer
          minimum: 1
      required:
        - item
        - quantity
      additionalProperties: false
    ItemList:
      type: array
      items:
        $ref: "#/components/schemas/ItemID"

    Location:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/LocationID"
        name:
          $ref: "#/components/schemas/I18nString"
        description:
          $ref: "#/components/schemas/I18nString"
      required:
        - id
        - name
        - description
      additionalProperties: false
    LocationID:
      type: string
      enum:
        - badgetown
        - mamoonia
    LocationList:
      type: array
      items:
        $ref: "#/components/schemas/LocationID"

    Move:
      type: object
      properties:
        id:
          $ref: "#/components/schemas/MoveID"
        name:
          $ref: "#/components/schemas/I18nString"
        description:
          $ref: "#/components/schemas/I18nString"
        cost:
          type: integer
          minimum: 0
      required:
        - id
        - name
        - description
        - cost
      additionalProperties: false
    MoveID:
      type: string
      enum:
        - angkze_consolation_deflation
        - angkze_daze_raise
        - angkze_double_dutch_clutch
        - bibbin_bibbin_bop
        - bibbin_drizzle_drop
        - bibbin_flora_flip
        - bittle_capoeira_copy
        - bittle_flout_for_doubt
        - bittle_pilfer_polka
        - bristlebud_prickle_prance
        - bristlebud_spiny_spin
        - bristlebud_stompulent
        - bunglebee_gimme_gimme
        - bunglebee_hive_jive
        - bunglebee_sting_ringer
        - chickadingding_give_a_dance
        - chickadingding_rubadubdub
        - chickadingding_slipper_samba
        - clickyclaws_hopping_mad
        - clickyclaws_just_a_taste
        - clickyclaws_marginal_mamba
        - clomper_astound_around
        - clomper_jittershrug
        - clomper_shock_n_shimmy
        - derble_bon_bon_bop
        - derble_jelly_jive
        - derble_quiddany_quickstep
        - dooziedug_pep_pep
        - dooziedug_pop_in
        - dooziedug_rough_landing
        - dumbirb_dawdle_waddle
        - dumbirb_jolt_n_bolt
        - dumbirb_muster_fluster
        - firmo_gear_glissade
        - firmo_hydraulic_hornpipe
        - firmo_soft_shoe_servo
        - fleeble_minuscule_medley
        - fleeble_petty_formation
        - fleeble_skip_step
        - fripp_fair_port_de_corps
        - fripp_loaded_lindy
        - fripp_swing_crimson
        - glanter_hoberdygurdy
        - glanter_pumpkizzicato
        - glanter_tarantelantern
        - gloopy_long_legs_glomp_tromp
        - gloopy_long_legs_jelly_jazz
        - gloopy_long_legs_marmalade_moat
        - gopslop_grubby_hands
        - gopslop_muddy_the_waters
        - gopslop_mudslide
        - grebun_just_a_taste
        - grebun_next
        - grebun_waddleswap
        - gubwee_overbear_snare
        - gubwee_sassy_saute
        - gubwee_shuffle_shanty
        - gullysplot_icing_on_the_cake
        - gullysplot_room_to_croon
        - gullysplot_swap_hop
        - gumple_hypebeast
        - gumple_silly_arms
        - gumple_stress_relief
        - hermble_extra_mild_salsa
        - hermble_hokeyokay
        - hermble_saturday_gigue
        - isopud_hunker_down
        - isopud_repress_duress
        - isopud_spin_up
        - jama_bumpabuff
        - jama_cozy_courante
        - jama_snug_sarabande
        - kingwa_divine_sleight
        - kingwa_doubtful_decree
        - kingwa_royal_concession
        - legsy_fluster_foist
        - legsy_pike_drop
        - legsy_slick_pick
        - lickzer_concoct_obstruct
        - lickzer_focus_pocus
        - lickzer_magniphilter
        - lumpstump_boogie_blossom
        - lumpstump_put_down_roots
        - lumpstump_shake_the_tree
        - marshling_fluster_flood
        - marshling_mire_medley
        - marshling_swamp_romp
        - moogy_flitter_flutter
        - moogy_grand_pa_dee_do
        - moogy_inundation_notation
        - namnam_bitsy_boo
        - namnam_clawback
        - namnam_roar_routine
        - nuppo_flummoxtrot
        - nuppo_friend_flurry_floss
        - nuppo_grand_adage
        - oogum_backward_limbo
        - oogum_counter_projection
        - oogum_displaced_dervish
        - pantsabear_sean_nos_boop
        - pantsabear_slip_jig_slacks
        - pantsabear_treble_reel_trousers
        - petula_bike_shred_cred
        - petula_blue_sky_this
        - petula_design_by_committee
        - plob_crop_bop
        - plob_loot_scoot
        - plob_sow_glow
        - quabbo_flip_trip
        - quabbo_hype_swipe
        - quabbo_new_step
        - radlad_big_flourish
        - radlad_cancel_prancel
        - radlad_slow_jam
        - rockstack_boulder_smoulder
        - rockstack_fresh_quarry
        - rockstack_in_the_rough
        - shrumbo_sashay
        - shrumbo_shake_it
        - shrumbo_showcase
        - sidekey_finite_loop
        - sidekey_machine_spurning
        - sidekey_system_pause
        - skuffalo_clean_quadrille
        - skuffalo_steady_gains
        - skuffalo_trep_trip
        - snurfler_gemjam
        - snurfler_gemjive
        - snurfler_gemjolt
        - spuddle_beserka_mazurka
        - spuddle_group_think_slink
        - spuddle_risky_shift
        - tamlin_babbify
        - tamlin_fey_away
        - tamlin_pixie_dustup
        - tud_glaze_glide
        - tud_hype_tram_jam
        - tud_tadpolka
        - unnyhunny_fresh_start
        - unnyhunny_let_loose
        - unnyhunny_sugar_pan_shuffle
        - whirlitzer_abrupt_disrupt
        - whirlitzer_fateful_flourish
        - whirlitzer_gracing_pacing
        - wigglewip_gyrate_fete
        - wigglewip_plie_dj
        - wigglewip_rattle_n_addle
        - wuddlin_freeze_frame
        - wuddlin_softserve_shuffle
        - wuddlin_wuddlin_waddle
    MoveWithLevel:
      type: object
      properties:
        move:
          $ref: "#/components/schemas/MoveID"
        level:
          type: integer
          minimum: 1
      required:
        - move
        - level
      additionalProperties: false
    MoveList:
      type: array
      items:
        $ref: "#/components/schemas/MoveID"

    I18nString:
      type: object
      properties:
        default:
          type: string
      required:
        - default
      additionalProperties:
        type: string
